import traceback

from tgbot.services.database import PSGame, PSGameEdition, XBOXGame, XBOXGameEdition, ConsoleSubscription
from tgbot.data.loader import Session

import openpyxl
from openpyxl.workbook import Workbook
from openpyxl.worksheet.worksheet import Worksheet


def load_xbox():
    with Session() as db_session:
        all_games = db_session.query(XBOXGame).all()
        games = [(i._name, i.category) for i in all_games]
        cats_dict = {i[0]: i[1] for i in set((j.category, j.emoji) for j in all_games)}

        wb: Workbook = openpyxl.load_workbook('XBOX.xlsx')
        sheet: Worksheet = wb.active

        for line in sheet.values:
            if not line[1]:
                continue
            if not line[2]:
                break

            try:
                game_name = line[0].strip()
                category = line[1].strip()
                if (game_name, category) in games:
                    continue

                game = XBOXGame(name=game_name, category=category, emoji=cats_dict.get('category', ''))
                db_session.add(game)
                db_session.commit()

                for edition_str in line[2:]:
                    if not edition_str:
                        break

                    # print(edition_str.split('|'))
                    if edition_str.split('|')[0].strip() not in ['X/S'] or edition_str.split('|')[0].strip() == 'xbox':
                        platforms = ['all']
                        if edition_str[0:4] == 'xbox':
                            edition_str = edition_str[5:]
                        edition_name, description, pic, prices = edition_str.split('|')
                    else:
                        platform, edition_name, description, pic, prices = edition_str.split('|')
                        platforms = [platform]
                    price = int(prices.split(',')[1]) if ',' in prices else int(prices)
                    region = 'tr'

                    for platform in platforms:
                        edition = XBOXGameEdition(name=edition_name.strip(), platform=platform.strip(), pic=pic.strip(),
                                                  region=region,
                                                  game_id=game.id,
                                                  price=price, description=description.replace('\\n', '\n').strip())
                        db_session.add(edition)
                db_session.commit()
            except Exception as e:
                db_session.rollback()
                db_session.delete(game)
                db_session.commit()
                print(f'–ò–≥—Ä–∞ {line} –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ {e}')


def load_ps():
    with Session() as db_session:
        all_games = db_session.query(PSGame).all()
        games = [(i._name, i.category) for i in all_games]
        cats_dict = {i[0]: i[1] for i in set((j.category, j.emoji) for j in all_games)}

        wb: Workbook = openpyxl.load_workbook('PS.xlsx')

        sheet: Worksheet = wb.active

        for line in sheet.values:
            if not line[1]:
                continue
            if not line[2]:
                break
            try:
                game_name = line[0].strip()
                category = line[1].strip()
                print(game_name, category, (game_name, category) in games)
                if (game_name, category) in games:
                    continue

                game = PSGame(name=game_name, category=category, emoji=cats_dict.get('category', ''))
                db_session.add(game)
                db_session.commit()
                for edition_str in line[2:]:
                    if not edition_str:
                        break

                    # print(edition_str.split('|'))
                    if edition_str.split('|')[0].strip() not in ['ps4', 'ps5'] or edition_str.split('|')[
                        0].strip() == 'ps':
                        platforms = ['ps4', 'ps5']
                        if edition_str[0:2] == 'ps':
                            edition_str = edition_str[3:]
                        edition_name, description, pic, prices = edition_str.split('|')
                    else:
                        platform, edition_name, description, pic, prices = edition_str.split('|')
                        platforms = [platform]
                    prices = [int(i) for i in prices.split(',')]
                    regions = ['ua', 'tr']

                    for platform in platforms:
                        for i in [0, 1]:
                            if not prices[i]:
                                continue

                            edition = PSGameEdition(name=edition_name, platform=platform, pic=pic, region=regions[i],
                                                    game_id=game.id,
                                                    price=prices[i],
                                                    description=description.replace('\\n', '\n').replace('/n',
                                                                                                         '\n').strip())
                            db_session.add(edition)
                db_session.commit()
            except:
                db_session.rollback()
                db_session.delete(game)
                db_session.commit()
                traceback.print_exc()
                print(f'–ò–≥—Ä–∞ {line} –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏')


"""–¢—É—Ä—Ü–∏—è

890 - Essential 1m
1390 - Extra 1m
1590 - Deluxe 1m

2260 - essential 3m
3590 - extra 3m
4090 - Deluxe 3m

6290 - essential 12m
10490 - extra 12m
11990 - deluxe 12m

–£–∫—Ä–∞–∏–Ω–∞

930 - Essential 1m
1390 - Extra 1m
1590 - Deluxe 1m

2190 - essential 3m
3490 - extra 3m
3090 - Deluxe 3m

5490 - essential 12m
8590 - extra 12m
9590 - deluxe 12m"""

"""
–ù–∞ Essential

‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É
‚Ä¢ 3 —Å–ª—É—á–∞–π–Ω—ã–µ –∏–≥—Ä—ã –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü

Extra

‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–∑ 400 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä

–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏–≥—Ä –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏–ª–∏ –≤ —Å–∞–º–æ–π –∫–æ–Ω—Å–æ–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´Ps Plus¬ª

Deluxe 

‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–∑ 700 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞—Ç—å –≤ –Ω–æ–≤–∏–Ω–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏

–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏–≥—Ä –≤—ã –º–æ–∂–µ—Ç–µ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏–ª–∏ –≤ —Å–∞–º–æ–π –∫–æ–Ω—Å–æ–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´Ps Plus¬ª

Ea Play

‚Ä¢–î–æ—Å—Ç—É–ø –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä EA Play —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –º–æ–∂–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ

Gamepass Ultimate

–°–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –ø–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—é —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ —Ç–∞—Ä–∏—Ñ –≤ Microsoft Store

–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä EA Play —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ
‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ—Ç–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –∏–≥—Ä –æ—Ç Gamepass
‚Ä¢ –î–æ—Å—Ç—É–ø –≤ –æ–Ω–ª–∞–π–Ω
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—é –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –¥—Ä—É–≥–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ —Ç–æ–π –∂–µ —Å–∞–º–æ–π Microsoft"""


def load_subscriptions():
    descriptions = {'‚ö™Ô∏è Essential': '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É\n‚Ä¢ 3 —Å–ª—É—á–∞–π–Ω—ã–µ –∏–≥—Ä—ã –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü',
                    'üü° Extra': '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É\n‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–∑ 400 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä',
                    '‚ö´Ô∏è Deluxe': '‚Ä¢ –î–æ—Å—Ç—É–ø –∫ –æ–Ω–ª–∞–π–Ω—É\n‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–∑ 700 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –∏–≥—Ä\n‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞—Ç—å –≤ –Ω–æ–≤–∏–Ω–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä–µ–º–µ–Ω–∏',
                    'üî¥ Ea Play': '‚Ä¢–î–æ—Å—Ç—É–ø –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä EA Play —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ. –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –º–æ–∂–Ω–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ',
                    'Gamepass Ultimate': '–°–∞–º—ã–π –≤—ã–≥–æ–¥–Ω—ã–π –ø–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—é —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ —Ç–∞—Ä–∏—Ñ –≤ Microsoft Store\n\n–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\n‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä EA Play —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ\n‚Ä¢ –î–æ—Å—Ç—É–ø –∫ —Å–æ—Ç–Ω–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –∏–≥—Ä –æ—Ç Gamepass\n‚Ä¢ –î–æ—Å—Ç—É–ø –≤ –æ–Ω–ª–∞–π–Ω\n‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—é –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ–º –¥—Ä—É–≥–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ —Ç–æ–π –∂–µ —Å–∞–º–æ–π Microsoft'
                    }

    with Session() as db_session:
        platform = 'ps'
        names = ['‚ö™Ô∏è Essential', 'üü° Extra', '‚ö´Ô∏è Deluxe', 'üî¥ Ea Play']
        durations = [1, 3, 12]
        prices = {'tr': [(890, 1390, 1590, 320), (2260, 3590, 4090), (6290, 10490, 11990, 1500)],
                  'ua': [(930, 1390, 1590, 600), (2190, 3490, 3090), (5490, 8590, 9590, 2800)]}

        for i, name in enumerate(names):
            for j, duration in enumerate(durations):
                for region in ['tr', 'ua']:
                    if i == 3:
                        if j == 1:
                            continue
                    price = prices[region][j][i]
                    subscription = ConsoleSubscription(name=name, platform=platform, region=region, duration=duration,
                                                       price=price, description=descriptions[name])
                    db_session.add(subscription)
        """13 –º–µ—Å—è—Ü–µ–≤ - 3590‚ÇΩ
9 –º–µ—Å—è—Ü–µ–≤ - 2790‚ÇΩ 
5 –º–µ—Å—è—Ü–µ–≤ - 1990‚ÇΩ
1 –º–µ—Å—è—Ü - 790‚ÇΩ"""
        platform = 'xbox'
        name = 'Gamepass Ultimate'
        durations = [1, 3, 9, 13]
        prices = [790, 1990, 2790, 3590]
        for i, duration in enumerate(durations):
            subscription = ConsoleSubscription(name=name, platform=platform, duration=duration,
                                               price=prices[i], description=descriptions[name])
            db_session.add(subscription)
        db_session.commit()


load_ps()
load_xbox()
